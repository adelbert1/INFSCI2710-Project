CREATE TABLE SALESPERSONS(
	SP_ID INT GENERATED ALWAYS AS IDENTITY,
	NAME VARCHAR(255) NOT NULL,
	STREET VARCHAR(255),
	CITY VARCHAR(255),
	STATE VARCHAR(2),
	ZIP VARCHAR(5),
	EMAIL VARCHAR(255),
	PHONE VARCHAR(25),
	JOB_TITLE VARCHAR(255),
	PRIMARY KEY(SP_ID),
	CONSTRAINT CHK_EMAIL CHECK (EMAIL LIKE '%_@__%.com' AND EMAIL NOT LIKE '%@@%' AND EMAIL NOT LIKE '%..%'),
	CONSTRAINT CHK_PHONE CHECK (PHONE LIKE '___-___-____'),
	CONSTRAINT CHK_NAME CHECK (NAME != '')
);

CREATE TABLE CUSTOMERS(
	CUST_ID INT GENERATED ALWAYS AS IDENTITY,
	SP_ID INT NOT NULL,
	NAME VARCHAR(255) NOT NULL,
	STREET VARCHAR(255),
	CITY VARCHAR(255),
	STATE VARCHAR(2),
	ZIP VARCHAR(5),
	EMAIL VARCHAR(255),
	PHONE VARCHAR(25),
	COMPANY VARCHAR(50),
	COMPANY_GROSS_INCOME_DOLLARS FLOAT(25),
	PRIMARY KEY(CUST_ID),
	FOREIGN KEY (SP_ID) REFERENCES SALESPERSONS(SP_ID),
	UNIQUE (CUST_ID, SP_ID),
	CONSTRAINT CHK_NAME CHECK (NAME != ''),
	CONSTRAINT CHK_EMAIL CHECK (EMAIL LIKE '%_@__%.com' AND EMAIL NOT LIKE '%@@%' AND EMAIL NOT LIKE '%..%'),
	CONSTRAINT CHK_PHONE CHECK (PHONE LIKE '___-___-____')
);

CREATE TABLE PRODUCTS(
	P_ID INT GENERATED ALWAYS AS IDENTITY,
	NAME VARCHAR(255) NOT NULL,
	DESCRIPTION VARCHAR(255) NOT NULL,
	PRIMARY KEY(P_ID),
	UNIQUE (NAME),
	CONSTRAINT CHK_NAME CHECK (NAME != ''),
	CONSTRAINT CHK_DESCRIPTION CHECK (DESCRIPTION != '')
);

CREATE TABLE OWN(
	O_ID SERIAL,
	CUST_ID INT NOT NULL,
	P_ID INT NOT NULL,
 	PRIMARY KEY (O_ID),
	FOREIGN KEY (P_ID) REFERENCES PRODUCTS(P_ID),
	FOREIGN KEY (CUST_ID) REFERENCES CUSTOMERS(CUST_ID),
	CONSTRAINT OWNER UNIQUE (O_ID, CUST_ID)
);

CREATE TABLE EMPLOYEES(
	EMP_ID INT GENERATED ALWAYS AS IDENTITY,
	NAME VARCHAR(255) NOT NULL,
	STREET VARCHAR(255),
	CITY VARCHAR(255),
	STATE VARCHAR(2),
	ZIP VARCHAR(5),
	PHONE VARCHAR(25),
	EMAIL VARCHAR(255),
	PRIMARY KEY(EMP_ID),
	CONSTRAINT CHK_NAME CHECK (NAME != ''),
	CONSTRAINT CHK_EMAIL CHECK (EMAIL LIKE '%_@__%.com' AND EMAIL NOT LIKE '%@@%' AND EMAIL NOT LIKE '%..%'),
	CONSTRAINT CHK_PHONE CHECK (PHONE LIKE '___-___-____')
);


CREATE TABLE CASES(
	CASE_ID INT GENERATED ALWAYS AS IDENTITY,
	SUMMARY VARCHAR(255) NOT NULL,
	DESCRIPTION VARCHAR(255),
	STATUS BOOLEAN NOT NULL,
	EMP_ID INT NOT NULL,
	O_ID INT NOT NULL,
	TIMEOPENED DATE NOT NULL,
	TIMECLOSED DATE,
	PRIMARY KEY(CASE_ID),
	FOREIGN KEY (O_ID) REFERENCES OWN(O_ID),
	FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEES(EMP_ID),
	CONSTRAINT CHK_SUMMARY CHECK (SUMMARY != ''),
	CONSTRAINT CHK_TIMECLOSED1 CHECK ((STATUS = TRUE AND TIMECLOSED IS NULL) OR (STATUS = FALSE AND TIMECLOSED IS NOT NULL)) 
);

CREATE TABLE CASE_COMMENTS(
	COM_ID INT GENERATED ALWAYS AS IDENTITY,
	CASE_ID INT NOT NULL,
	COMMENT_TIME TIME NOT NULL,
	COMMENT_DATE DATE NOT NULL,
	CASE_COMMENT VARCHAR(255) NOT NULL,
	PRIMARY KEY(COM_ID),
	FOREIGN KEY (CASE_ID) REFERENCES CASES(CASE_ID),
	UNIQUE (CASE_ID, COM_ID),
	CONSTRAINT CHK_CASE_COMMENT CHECK (CASE_COMMENT != '')
);

CREATE TABLE RESOLUTIONS(
	RES_ID INT GENERATED ALWAYS AS IDENTITY,
	RES_NAME VARCHAR(255) NOT NULL,
	STEPS VARCHAR(255) NOT NULL,
	CASE_ID INT NOT NULL,
	PRIMARY KEY(RES_ID),
	FOREIGN KEY (CASE_ID) REFERENCES CASES(CASE_ID),
	UNIQUE(CASE_ID),
	CONSTRAINT CHK_RES_NAME CHECK (RES_NAME != ''),
	CONSTRAINT CHK_STEPS CHECK (STEPS != '')
);

CREATE TABLE SELL(
	SELL_ID SERIAL,
	SP_ID INT NOT NULL,
	P_ID INT NOT NULL,
 	PRIMARY KEY (SELL_ID),
	FOREIGN KEY (SP_ID) REFERENCES SALESPERSONS(SP_ID),
	FOREIGN KEY (P_ID) REFERENCES PRODUCTS(P_ID)
);

/* Creating Indexes */
CREATE INDEX IX_CUSTOMERS1 on CUSTOMERS(CUST_ID, NAME, SP_ID, COMPANY, COMPANY_GROSS_INCOME_DOLLARS);

CREATE INDEX IX_SALESPERSONS1 on SALESPERSONS(SP_ID, NAME, JOB_TITLE);

CREATE INDEX IX_PRODUCTS1 on PRODUCTS(P_ID, NAME);

CREATE INDEX IX_EMPLOYEES1 on EMPLOYEES(EMP_ID, NAME);

CREATE INDEX IX_CASES1 on CASES(CASE_ID, O_ID, EMP_ID, STATUS, TIMEOPENED, TIMECLOSED);

CREATE INDEX IX_CASE_COMMENTS1 on CASE_COMMENTS(COM_ID, CASE_ID, COMMENT_TIME, COMMENT_DATE);

CREATE INDEX IX_RESOLUTIONS1 on RESOLUTIONS(RES_ID, CASE_ID, RES_NAME);

CREATE INDEX IX_OWN1 on OWN(O_ID, CUST_ID, P_ID);
